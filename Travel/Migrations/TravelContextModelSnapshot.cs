// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Travel.Models;

namespace Travel.Migrations
{
    [DbContext(typeof(TravelContext))]
    partial class TravelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Travel.Models.Destination", b =>
                {
                    b.Property<int>("DestinationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Country")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("DestinationId");

                    b.ToTable("Destinations");

                    b.HasData(
                        new
                        {
                            DestinationId = 1,
                            City = "Portland",
                            Country = "USA"
                        },
                        new
                        {
                            DestinationId = 2,
                            City = "Toronot",
                            Country = "Canada"
                        },
                        new
                        {
                            DestinationId = 3,
                            City = "Paris",
                            Country = "France"
                        },
                        new
                        {
                            DestinationId = 4,
                            City = "Amsterdam",
                            Country = "Netherlands"
                        },
                        new
                        {
                            DestinationId = 5,
                            City = "London",
                            Country = "United Kingdom"
                        });
                });

            modelBuilder.Entity("Travel.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<double>("Rating")
                        .HasColumnType("double");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ReviewId");

                    b.HasIndex("DestinationId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            ReviewId = 1,
                            Content = "Def a city",
                            DestinationId = 1,
                            Rating = 6.0,
                            Title = "My Review"
                        },
                        new
                        {
                            ReviewId = 2,
                            Content = "very cool",
                            DestinationId = 1,
                            Rating = 9.9000000000000004,
                            Title = "Cool review"
                        },
                        new
                        {
                            ReviewId = 3,
                            Content = "even cooler",
                            DestinationId = 1,
                            Rating = 10.0,
                            Title = "Cooler review"
                        },
                        new
                        {
                            ReviewId = 4,
                            Content = "yep",
                            DestinationId = 2,
                            Rating = 0.0,
                            Title = "still a review"
                        },
                        new
                        {
                            ReviewId = 5,
                            Content = "its Amsterdam",
                            DestinationId = 2,
                            Rating = 3.5,
                            Title = "revier"
                        },
                        new
                        {
                            ReviewId = 6,
                            Content = "its London",
                            DestinationId = 3,
                            Rating = 6.9000000000000004,
                            Title = "United Kingdom"
                        },
                        new
                        {
                            ReviewId = 7,
                            Content = "Def a city",
                            DestinationId = 4,
                            Rating = 6.0,
                            Title = "My Review"
                        },
                        new
                        {
                            ReviewId = 8,
                            Content = "Def a city",
                            DestinationId = 5,
                            Rating = 1.0,
                            Title = "My Review again"
                        });
                });

            modelBuilder.Entity("Travel.Models.Review", b =>
                {
                    b.HasOne("Travel.Models.Destination", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destination");
                });
#pragma warning restore 612, 618
        }
    }
}
